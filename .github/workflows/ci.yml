name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  release:
    types: [published]

jobs:
  test:
    name: Test Suite
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16.x, 18.x, 20.x]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run linting
      run: npm run lint
      
    - name: Run unit tests
      run: npm run test:unit
      
    - name: Run integration tests
      run: npm run test:integration
      
    - name: Run full test suite with coverage
      run: npm run test:coverage
      
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        file: ./coverage/lcov.info
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: true

  build:
    name: Build Extension
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18.x'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build extension
      run: npm run build:prod
      
    - name: Validate manifest
      run: |
        if [ ! -f "dist/manifest.json" ]; then
          echo "manifest.json not found in dist/"
          exit 1
        fi
        echo "‚úÖ Manifest validation passed"
        
    - name: Check bundle size
      run: |
        BUNDLE_SIZE=$(du -sb dist/ | cut -f1)
        MAX_SIZE=5242880  # 5MB limit for Chrome Web Store
        if [ $BUNDLE_SIZE -gt $MAX_SIZE ]; then
          echo "‚ùå Bundle size ($BUNDLE_SIZE bytes) exceeds Chrome Web Store limit ($MAX_SIZE bytes)"
          exit 1
        fi
        echo "‚úÖ Bundle size check passed: $BUNDLE_SIZE bytes"
        
    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: extension-build-${{ github.sha }}
        path: dist/
        retention-days: 30

  e2e-tests:
    name: End-to-End Tests
    runs-on: ubuntu-latest
    needs: build
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18.x'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Download build artifacts
      uses: actions/download-artifact@v5
      with:
        name: extension-build-${{ github.sha }}
        path: dist/
        
    - name: Install Chrome
      uses: browser-actions/setup-chrome@latest
      
    - name: Run E2E tests
      run: npm run test:e2e
      env:
        EXTENSION_PATH: ./dist
        
    - name: Upload E2E test results
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: e2e-test-results
        path: tests/e2e/results/

  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    needs: build
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18.x'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run security audit
      run: npm audit --audit-level=moderate
      
    - name: Download build artifacts
      uses: actions/download-artifact@v5
      with:
        name: extension-build-${{ github.sha }}
        path: dist/
        
    - name: Scan for secrets
      uses: trufflesecurity/trufflehog@main
      with:
        path: ./
        base: main
        head: HEAD
        extra_args: --debug --only-verified
        
    - name: Check for sensitive data in build
      run: |
        echo "üîç Scanning build for sensitive data..."
        if grep -r "sk_" dist/ || grep -r "api_key" dist/ || grep -r "password" dist/; then
          echo "‚ùå Potential sensitive data found in build"
          exit 1
        fi
        echo "‚úÖ No sensitive data detected"

  publish-chrome-store:
    name: Publish to Chrome Web Store
    runs-on: ubuntu-latest
    needs: [test, build, e2e-tests, security-scan]
    if: github.event_name == 'release' && github.event.action == 'published'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Download build artifacts
      uses: actions/download-artifact@v5
      with:
        name: extension-build-${{ github.sha }}
        path: dist/
        
    - name: Package extension
      run: |
        cd dist
        zip -r ../extension.zip .
        cd ..
        
    - name: Upload to Chrome Web Store
      uses: mnao305/chrome-extension-upload@v4.0.1
      with:
        file-path: extension.zip
        extension-id: ${{ secrets.CHROME_EXTENSION_ID }}
        client-id: ${{ secrets.CHROME_CLIENT_ID }}
        client-secret: ${{ secrets.CHROME_CLIENT_SECRET }}
        refresh-token: ${{ secrets.CHROME_REFRESH_TOKEN }}
        publish: true

  performance-audit:
    name: Performance Audit
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'pull_request'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18.x'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Download build artifacts
      uses: actions/download-artifact@v5
      with:
        name: extension-build-${{ github.sha }}
        path: dist/
        
    - name: Run performance tests
      run: npm run test:performance
      
    - name: Analyze bundle
      run: |
        echo "üìä Bundle Analysis:"
        echo "Total size: $(du -sh dist/)"
        echo "File breakdown:"
        find dist/ -type f -exec ls -lh {} \; | awk '{print $5, $9}' | sort -hr
        
    - name: Comment PR with performance results
      uses: actions/github-script@v6
      if: github.event_name == 'pull_request'
      with:
        script: |
          const fs = require('fs');
          const bundleSize = require('child_process').execSync('du -sb dist/').toString().split('\t')[0];
          const comment = `
          ## üìä Performance Audit Results
          
          **Bundle Size**: ${(bundleSize / 1024 / 1024).toFixed(2)} MB
          **Status**: ${bundleSize < 5242880 ? '‚úÖ Within Chrome Web Store limits' : '‚ùå Exceeds limits'}
          
          See [full performance report](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}) for details.
          `;
          
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: comment
          });

  auto-update-dependencies:
    name: Auto-update Dependencies
    runs-on: ubuntu-latest
    if: github.event_name == 'schedule'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18.x'
        cache: 'npm'
        
    - name: Update dependencies
      run: |
        npm update
        npm audit fix --audit-level=moderate
        
    - name: Run tests after update
      run: |
        npm ci
        npm test
        
    - name: Create PR for dependency updates
      uses: peter-evans/create-pull-request@v5
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        commit-message: 'chore: update dependencies'
        title: 'Auto-update Dependencies'
        body: |
          ## üîÑ Automated Dependency Update
          
          This PR contains automated dependency updates.
          
          **Changes:**
          - Updated npm packages to latest compatible versions
          - Applied security fixes
          
          **Testing:**
          - ‚úÖ All tests pass
          - ‚úÖ No breaking changes detected
          
          Please review and merge if everything looks good.
        branch: auto-update-deps
        delete-branch: true

# Scheduled jobs
  scheduled-tests:
    name: Scheduled Health Check
    runs-on: ubuntu-latest
    if: github.event_name == 'schedule'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18.x'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run full test suite
      run: npm run test:ci
      
    - name: Health check notification
      if: failure()
      uses: 8398a7/action-slack@v3
      with:
        status: failure
        channel: '#dev-alerts'
        webhook_url: ${{ secrets.SLACK_WEBHOOK }}
        text: "üö® Scheduled health check failed for Attention Trainer Extension"

# Schedule for daily dependency checks and weekly health checks
on:
  schedule:
    - cron: '0 2 * * 1'  # Weekly on Monday at 2 AM UTC
    - cron: '0 6 * * *'  # Daily at 6 AM UTC for dependency updates
